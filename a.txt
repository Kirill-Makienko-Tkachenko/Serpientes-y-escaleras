From this code snippet

#include <string>
#include <iostream>


#pragma once 
using namespace std;

class Jugador{

    string nombre = "Jugador";
    int nJugador = 0, posicionTablero = 0, score = 0;
public:

//Constructores:

//Constructor Inline
Jugador(const string &nom, 
        const int &nJug,
        const int &pos, const int &score) : nombre(nom), posicionTablero(pos), 
                                                        nJugador(nJug), score(score) {} //Constructor que acepta parametros del main para construir jugador

~Jugador() {} //Destructor por omision


Jugador(){ //Constructor generico, agarra valores por default de los valores definidos en privado
    nombre = getNombre();
    this -> nJugador = nJugador;
    this -> posicionTablero = posicionTablero;
    this -> score = score;
}//Resultado esperado: nombre = Jugador, ignora todo lo demas xd

//Definicion de Getters

const string &getNombre() { return nombre; }
const int &getJugador() { return nJugador; }
const int &getPosicion() { return posicionTablero; }
const int &getScore() { return score; }

//Definicion de Setters

void setNombre(const string &nom) { nombre = nom; }
void setNumero(const int &nJug) { nJugador = nJug; }
void setPosicion(const int &pos) { posicionTablero = pos; }
void setScore(const int &score) { this -> score = score; }

//Metodo imprimir jugador

void imprimeJugador(){
    cout << nombre << " " << nJugador << " " << posicionTablero << " " << score << "\n";
}

};

bool teclaPresionada(string tecla) {
    if (tecla == "C" || tecla == "c") {
        return true;
    }
    else if (tecla == "E" || tecla == "e") {
        return false;
    }
    else {
        //cout << "Invalid option, please press C to continue next turn or E to end game" << endl;
        return false; // Return false indicating an invalid key
    }
}


class MyGame{

public:
    void start(){
        int val_dado, posicion, posicion_n;
        Jugador J1("Jugador 1", 1, 1, 0), J2("Jugador 2", 2,1,0); //Definimos 2 jugadores
        Dado dado(6);
        Tablero T1;
        string option;
        bool value;


        cout << R"(_________ .__            __    __                                      .___  .____                .___  .___                   )" << endl;
        sleep(1);
        cout << R"(\_   ___ \|  |__  __ ___/  |__/  |_  ____   ______  _____    ____    __| _/  |    |   _____     __| _/__| _/___________  ______)" << endl;
        sleep(1);
        cout << R"(/    \  \/|  |  \|  |  \   __\   __\/ __ \ /  ___/  \__  \  /    \  / __ |   |    |   \__  \   / __ |/ __ |/ __ \_  __ \/  ___/)" << endl;
        sleep(1);
        cout << R"(\     \___|   Y  \  |  /|  |  |  | \  ___/ \___ \    / __ \|   |  \/ /_/ |   |    |___ / __ \_/ /_/ / /_/ \  ___/|  | \/\___ \ )" << endl;
        sleep(1);
        cout << R"( \______  /___|  /____/ |__|  |__|  \___  >____  >  (____  /___|  /\____ |   |_______ (____  /\____ \____ |\___  >__|  /____  >)" << endl;
        sleep(1);
        cout << R"(         \/     \/                       \/     \/        \/     \/      \/           \/    \/      \/    \/    \/           \/ )" << endl;
        cout << "Welcome to the game, please wait for the game to start.\n";
        sleep(5);


        for(int i = 0; i<29; i++){
            int turno = i;
            if (i%2 == 0){
                
                    cout << "Press C to continue next turn, or E to end the game:" << "\n";
                    cin >> option;
                    if (option == "E" || option == "e") {
                        cout << "Ok, exiting game" << endl;
                        return;
                    }   
                    value = teclaPresionada(option);

                    if (value){
                        posicion_n = 0;
                        cout << "Options for player 1: \n";
                        cout << "Turn" << "Player" << "Position" << "Dice Value" << "Target cell" << "Final position" << "\n";
                        val_dado = dado.roll();
                        posicion = J1.getPosicion() + val_dado;
                        if(T1.getCelda(posicion) == "S") { posicion_n = posicion - 3; }
                        if(T1.getCelda(posicion) == "E") { posicion_n = posicion + 3; }
                        cout << turno << J1.getJugador() << J1.getPosicion() << T1.getCelda(posicion) << posicion_n << "\n";
                        J1.setPosicion(posicion_n);
                        turno++;
                    }
                    
                    else {
                        cout << "Invalid option, please press C to continue next turn or E to end the game" << "\n";
                        while (!value)
                        {
                            cout << "Press C to continue next turn, or E to end the game:" << "\n";
                            cin >> option;
                            if (option == "E" || option == "e") {
                            cout << "Ok, exiting game" << endl;
                            return;
                            }   
                            value = teclaPresionada(option);
                        }
                        
                    }
                
            }
            if (i%2 != 0){
                
                    cout << "Press C to continue next turn, or E to end the game:" << "\n";
                    cin >> option;
                    if (option == "E" || option == "e") {
                        cout << "Ok, exiting game" << endl;
                        return;
                    }   
                    value = teclaPresionada(option);

                    if (value){
                        posicion_n = 0;
                        cout << "Options for player 2: \n";
                        cout << "Turn" << "Player" << "Position" << "Dice Value" << "Target cell" << "Final position" << "\n";
                        val_dado = dado.roll();
                        posicion = J2.getPosicion() + val_dado;
                        if(T1.getCelda(posicion) == "S") { posicion_n = posicion - 3; }
                        if(T1.getCelda(posicion) == "E") { posicion_n = posicion + 3; }
                        cout << turno << J2.getJugador() << J2.getPosicion() << T1.getCelda(posicion) << posicion_n << "\n";
                        J2.setPosicion(posicion_n);
                        turno++;
                    }
                    
                    else {
                        cout << "Invalid option, please press C to continue next turn or E to end the game" << "\n";
                        while (!value)
                        {
                            cout << "Press C to continue next turn, or E to end the game:" << "\n";
                            cin >> option;
                            if (option == "E" || option == "e") {
                            cout << "Ok, exiting game" << endl;
                            return;
                            }   
                            value = teclaPresionada(option);
                        }
                        
                    }
                
            }
        }
    }   
};



int main(){

    MyGame g;

    g.start();


    return 0;
}

how to print the J1.getJugador so that it prints the value assigned